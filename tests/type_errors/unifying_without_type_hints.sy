-- Should figure out that the type for this function is `Int -> Int`, it doesn't do that
def id : _ : a = a

def a : Int : = id ' 1
def b : Str : = id ' 1

--+ args: -o -t -
--+ expected stdout:
--+ 000 V "Int" @ 52-55
--+   used at: [Span(171, 174), Span(879, 882), Span(1205, 1208), Span(117, 120), Span(130, 131), Span(153, 154)]
--+   type: Int 
--+   raw: Ty(Apply(Foreign(Name { name: "Int", is_type: true, is_foreign: true, is_generic: false, def_at: Span(52, 55), usages: [Span(171, 174), Span(879, 882), Span(1205, 1208), Span(117, 120), Span(130, 131), Span(153, 154)] }), []))
--+ 001 V "Real" @ 72-76
--+   used at: [Span(153, 157), Span(584, 588), Span(895, 899), Span(1222, 1226)]
--+   type: Real 
--+   raw: Ty(Apply(Foreign(Name { name: "Real", is_type: true, is_foreign: true, is_generic: false, def_at: Span(72, 76), usages: [Span(153, 157), Span(584, 588), Span(895, 899), Span(1222, 1226)] }), []))
--+ 002 V "Str" @ 93-96
--+   used at: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)]
--+   type: Str 
--+   raw: Ty(Apply(Foreign(Name { name: "Str", is_type: true, is_foreign: true, is_generic: false, def_at: Span(93, 96), usages: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)] }), []))
--+ 003 V "Bool" @ 113-117
--+   used at: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)]
--+   type: Bool 
--+   raw: Ty(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))
--+ 004 V "Num" @ 136-139
--+   used at: [Span(136, 139), Span(149, 152), Span(167, 170), Span(204, 207), Span(325, 328), Span(446, 449), Span(567, 570), Span(691, 694)]
--+   type: _
--+   raw: Ty(Unknown)
--+ 005 V "_add" @ 180-184
--+   used at: []
--+   type: <#23 ([(class Num)] => t23)> -> <#23 ([(class Num)] => t23)> -> <#23 ([(class Num)] => t23)>
--+   raw: Ty(Function(NodeType(NameId(23)), Function(NodeType(NameId(23)), NodeType(NameId(23)))))
--+ 006 V "_sub" @ 301-305
--+   used at: []
--+   type: <#24 ([(class Num)] => t24)> -> <#24 ([(class Num)] => t24)> -> <#24 ([(class Num)] => t24)>
--+   raw: Ty(Function(NodeType(NameId(24)), Function(NodeType(NameId(24)), NodeType(NameId(24)))))
--+ 007 V "_mul" @ 422-426
--+   used at: []
--+   type: <#25 ([(class Num)] => t25)> -> <#25 ([(class Num)] => t25)> -> <#25 ([(class Num)] => t25)>
--+   raw: Ty(Function(NodeType(NameId(25)), Function(NodeType(NameId(25)), NodeType(NameId(25)))))
--+ 008 V "_div" @ 543-547
--+   used at: []
--+   type: <#26 ([(class Num)] => t26)> -> <#26 ([(class Num)] => t26)> -> Real 
--+   raw: Ty(Function(NodeType(NameId(26)), Function(NodeType(NameId(26)), Apply(Foreign(Name { name: "Real", is_type: true, is_foreign: true, is_generic: false, def_at: Span(72, 76), usages: [Span(153, 157), Span(584, 588), Span(895, 899), Span(1222, 1226)] }), []))))
--+ 009 V "_neg" @ 668-672
--+   used at: []
--+   type: <#27 ([(class Num)] => t27)> -> <#27 ([(class Num)] => t27)>
--+   raw: Ty(Function(NodeType(NameId(27)), NodeType(NameId(27))))
--+ 010 V "concat" @ 758-764
--+   used at: []
--+   type: Str  -> Str  -> Str 
--+   raw: Ty(Function(Apply(Foreign(Name { name: "Str", is_type: true, is_foreign: true, is_generic: false, def_at: Span(93, 96), usages: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)] }), []), Function(Apply(Foreign(Name { name: "Str", is_type: true, is_foreign: true, is_generic: false, def_at: Span(93, 96), usages: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)] }), []), Apply(Foreign(Name { name: "Str", is_type: true, is_foreign: true, is_generic: false, def_at: Span(93, 96), usages: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)] }), []))))
--+ 011 V "Eq" @ 864-866
--+   used at: [Span(864, 866), Span(876, 878), Span(892, 894), Span(909, 911), Span(925, 927), Span(961, 963), Span(1085, 1087)]
--+   type: _
--+   raw: Ty(Unknown)
--+ 012 V "_eq" @ 938-941
--+   used at: []
--+   type: <#28 ([(class Eq)] => t28)> -> <#28 ([(class Eq)] => t28)> -> Bool 
--+   raw: Ty(Function(NodeType(NameId(28)), Function(NodeType(NameId(28)), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 013 V "_neq" @ 1061-1065
--+   used at: []
--+   type: <#29 ([(class Eq)] => t29)> -> <#29 ([(class Eq)] => t29)> -> Bool 
--+   raw: Ty(Function(NodeType(NameId(29)), Function(NodeType(NameId(29)), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 014 V "Cmp" @ 1188-1191
--+   used at: [Span(1188, 1191), Span(1201, 1204), Span(1218, 1221), Span(1236, 1239), Span(1253, 1256), Span(1290, 1293), Span(1415, 1418)]
--+   type: _
--+   raw: Ty(Unknown)
--+ 015 V "_lt" @ 1267-1270
--+   used at: []
--+   type: <#30 ([(class Cmp)] => t30)> -> <#30 ([(class Cmp)] => t30)> -> Bool 
--+   raw: Ty(Function(NodeType(NameId(30)), Function(NodeType(NameId(30)), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 016 V "_lteq" @ 1390-1395
--+   used at: []
--+   type: <#31 ([(class Cmp)] => t31)> -> <#31 ([(class Cmp)] => t31)> -> Bool 
--+   raw: Ty(Function(NodeType(NameId(31)), Function(NodeType(NameId(31)), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 017 V "_and" @ 1517-1521
--+   used at: []
--+   type: Bool  -> Bool  -> Bool 
--+   raw: Ty(Function(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []), Function(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 018 V "_or" @ 1638-1641
--+   used at: []
--+   type: Bool  -> Bool  -> Bool 
--+   raw: Ty(Function(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []), Function(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []))))
--+ 019 V "_not" @ 1758-1762
--+   used at: []
--+   type: Bool  -> Bool 
--+   raw: Ty(Function(Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), []), Apply(Foreign(Name { name: "Bool", is_type: true, is_foreign: true, is_generic: false, def_at: Span(113, 117), usages: [Span(928, 932), Span(977, 981), Span(1101, 1105), Span(1257, 1261), Span(1307, 1311), Span(1432, 1436), Span(1537, 1541), Span(1545, 1549), Span(1553, 1557), Span(1657, 1661), Span(1665, 1669), Span(1673, 1677), Span(1777, 1781), Span(1785, 1789)] }), [])))
--+ 020 V "id" @ 93-95
--+   used at: [Span(125, 127), Span(148, 150)]
--+   type: #35
--+   raw: Child(NameId(35))
--+ 021 V "a" @ 113-114
--+   used at: []
--+   type: Int 
--+   raw: Ty(Apply(Foreign(Name { name: "Int", is_type: true, is_foreign: true, is_generic: false, def_at: Span(52, 55), usages: [Span(171, 174), Span(879, 882), Span(1205, 1208), Span(117, 120), Span(130, 131), Span(153, 154)] }), []))
--+ 022 V "b" @ 136-137
--+   used at: []
--+   type: Str 
--+   raw: Ty(Apply(Foreign(Name { name: "Str", is_type: true, is_foreign: true, is_generic: false, def_at: Span(93, 96), usages: [Span(767, 770), Span(774, 777), Span(781, 784), Span(912, 915), Span(1240, 1243), Span(140, 143)] }), []))
--+ 023 V "a" @ 197-198
--+   used at: [Span(208, 209), Span(211, 212), Span(216, 217), Span(221, 222)]
--+   type: ([(class Num)] => t23)
--+   raw: Ty(Req({Class(NameId(4))}, Generic(23)))
--+ 024 V "a" @ 318-319
--+   used at: [Span(329, 330), Span(332, 333), Span(337, 338), Span(342, 343)]
--+   type: ([(class Num)] => t24)
--+   raw: Ty(Req({Class(NameId(4))}, Generic(24)))
--+ 025 V "a" @ 439-440
--+   used at: [Span(450, 451), Span(453, 454), Span(458, 459), Span(463, 464)]
--+   type: ([(class Num)] => t25)
--+   raw: Ty(Req({Class(NameId(4))}, Generic(25)))
--+ 026 V "a" @ 560-561
--+   used at: [Span(571, 572), Span(574, 575), Span(579, 580)]
--+   type: ([(class Num)] => t26)
--+   raw: Ty(Req({Class(NameId(4))}, Generic(26)))
--+ 027 V "a" @ 684-685
--+   used at: [Span(695, 696), Span(698, 699), Span(703, 704)]
--+   type: ([(class Num)] => t27)
--+   raw: Ty(Req({Class(NameId(4))}, Generic(27)))
--+ 028 V "a" @ 954-955
--+   used at: [Span(964, 965), Span(967, 968), Span(972, 973)]
--+   type: ([(class Eq)] => t28)
--+   raw: Ty(Req({Class(NameId(11))}, Generic(28)))
--+ 029 V "a" @ 1078-1079
--+   used at: [Span(1088, 1089), Span(1091, 1092), Span(1096, 1097)]
--+   type: ([(class Eq)] => t29)
--+   raw: Ty(Req({Class(NameId(11))}, Generic(29)))
--+ 030 V "a" @ 1283-1284
--+   used at: [Span(1294, 1295), Span(1297, 1298), Span(1302, 1303)]
--+   type: ([(class Cmp)] => t30)
--+   raw: Ty(Req({Class(NameId(14))}, Generic(30)))
--+ 031 V "a" @ 1408-1409
--+   used at: [Span(1419, 1420), Span(1422, 1423), Span(1427, 1428)]
--+   type: ([(class Cmp)] => t31)
--+   raw: Ty(Req({Class(NameId(14))}, Generic(31)))
--+ 032 V "a" @ 1534-1535
--+   used at: []
--+   type: t32
--+   raw: Ty(Generic(32))
--+ 033 V "a" @ 1654-1655
--+   used at: []
--+   type: t33
--+   raw: Ty(Generic(33))
--+ 034 V "a" @ 1774-1775
--+   used at: []
--+   type: t34
--+   raw: Ty(Generic(34))
--+ 035 V "@" @ 98-99
--+   used at: []
--+   type: <#36 _> -> _
--+   raw: Ty(Function(NodeType(NameId(36)), Unknown))
--+ 036 V "a" @ 102-103
--+   used at: [Span(106, 107)]
--+   type: _
--+   raw: Ty(Unknown)

