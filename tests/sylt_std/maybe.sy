from maybe use (Maybe, flatten, orDefault, isJust, isNone)

start :: fn do
    1 <=> orDefault' Maybe.Just 1, 2
    2 <=> orDefault' Maybe.None, 2

    (Maybe.Just Maybe.Just 2) <=> flatten' Maybe.Just Maybe.Just Maybe.Just 2
    (Maybe.Just 1) <=> flatten' Maybe.Just Maybe.Just 1
    (Maybe.None) <=> flatten' Maybe.Just Maybe.None
    (Maybe.None) <=> flatten' Maybe.None

    true <=> isJust' Maybe.Just "abc"
    false <=> isJust' Maybe.None

    false <=> isNone' Maybe.Just "abc"
    true <=> isNone' Maybe.None
end
